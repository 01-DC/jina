name: CI

on: [pull_request]

jobs:
  copyright-add:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: VinnyBabuManjaly/copyright-action@v1.0.0
        with:
          CopyrightString: '__copyright__ = "Copyright 2020, Jina AI Limited. All rights reserved."\n__license__="Apache-2.0"\n\n'
          FileType: '.py'
          Path: 'jina/'
      - run: |
          cat jina/peapods/zmq.py
          cat jina/drivers/reduce.py

#  commit-lint:
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_TOKEN: ${{ secrets.JINA_DEV_BOT }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - run: "echo \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js"
#      - uses: wagoid/commitlint-github-action@v1
#
#  label-pr:
#    needs: commit-lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: "pascalgn/size-label-action@v0.2.1"
#        env:
#          GITHUB_TOKEN: "${{ secrets.JINA_DEV_BOT }}"
#      - uses: actions/labeler@v2
#        with:
#          repo-token: "${{ secrets.JINA_DEV_BOT }}"
#
#  unit-test:
#    needs: commit-lint
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest] #[macos-latest, ubuntu-latest]
#        python-version: [3.7, 3.8]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v1
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install .[match-py-ver]
#      - name: Lint with flake8
#        run: |
#          pip install flake8
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#      - name: Test with pytest
#        run: |
#          # make sure docker exist
#          docker ps
#          jina check
#          cd tests && python -m unittest *.py -v
#        #      run: |
#        #        pip install pytest
#        #        pip install pytest-cov
#        #        cd tests && pytest *.py --doctest-modules --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov=com --cov-report=xml --cov-report=html
#        #      shell: bash
#        timeout-minutes: 10