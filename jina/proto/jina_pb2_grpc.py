# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import jina_pb2 as jina__pb2


class JinaRPCStub(object):
    """*
    jina gRPC service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.Call = channel.stream_stream(
            '/jina.JinaRPC/Call',
            request_serializer=jina__pb2.Request.SerializeToString,
        response_deserializer=jina__pb2.Request.FromString,
        )


class JinaRPCServicer(object):
    """*
    jina gRPC service.
    """

    def Call(self, request_iterator, context):
        """Pass in a Request and a filled Request with topk_results will be returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JinaRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Call': grpc.stream_stream_rpc_method_handler(
          servicer.Call,
          request_deserializer=jina__pb2.Request.FromString,
          response_serializer=jina__pb2.Request.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'jina.JinaRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
